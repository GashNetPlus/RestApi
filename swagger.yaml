swagger: "2.0"
info:
  title: "Swagger GashNetPlus"
  version: "1.0.0"
  description: "This is the GashNetPlus REST API. The basepath URL is unique for each customer and access is restricted with a Token authorisation. Every succesfull request will return data in JSON format. All query parameters are required but are allowed to be empty."
  contact:
    email: "helpdesk@gashnetplus.be"
basePath: "/v2"
schemes:
- "https"
paths:
  /Entity/List:
    get:
      tags:
      - "Entity"
      summary: "Get entity IDs"
      description: ""
      operationId: "GetEntityList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "dateModified"
        in: "query"
        description: "Only return entity IDs where a change was made after the given date (example: 20220101 -> yyyyMMdd)"
        required: true
        type: "string"
        format: "date"
      - name: "pandStateCodeID"
        in: "query"
        description: "Only return entity IDs with this pand state code ID (example: 10)"
        required: true
        type: "integer"
        format: "int32"
      - name: "attributeCodeID"
        in: "query"
        description: "Only return entity IDs with this attribute code ID (example: 10) (combines with attributeValue)"
        required: true
        type: "integer"
        format: "int32"
      - name: "attributeValue"
        in: "query"
        description: "Only return entity IDs with this attribute value (example: 123456789) (combines with attributeValue)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /Entity/Range:
    get:
      tags:
      - "Entity"
      summary: "Get entity data in range (restricted to 100 records/request)"
      description: ""
      operationId: "GetEntityRange"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "range"
        in: "query"
        description: "range of IDs (example: 1,2,3,4,5)"
        required: true
        type: "string"
      - name: "adres"
        in: "query"
        description: "To request adres data or not (example: 0 or 1)"
        required: true
        type: "string"
      - name: "state"
        in: "query"
        description: "To request state data or not (example: 0 or 1)"
        required: true
        type: "string"
      - name: "attributes"
        in: "query"
        description: "To request attribute data or not (example: 0 or 1)"
        required: true
        type: "string"
      - name: "rights"
        in: "query"
        description: "To request owner rights data or not (example: 0 or 1)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Entity"
      security:
      - bearerAuth: []
  /Complex/List:
    get:
      tags:
      - "Complex"
      summary: "Get complex IDs"
      description: ""
      operationId: "GetComplexList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "dateModified"
        in: "query"
        description: "Only return complex IDs where a change was made after the given date (example: 20220101 -> yyyyMMdd)"
        required: true
        type: "string"
        format: "date"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /Complex/Range:
    get:
      tags:
      - "Complex"
      summary: "Get complex data in range (restricted to 100 records/request)"
      description: ""
      operationId: "GetComplexRange"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "range"
        in: "query"
        description: "range of IDs (example: 1,2,3,4,5)"
        required: true
        type: "string"
      - name: "adres"
        in: "query"
        description: "To request adres data or not (example: 0 or 1)"
        required: true
        type: "string"
      - name: "entityList"
        in: "query"
        description: "To request entityList data or not (example: 0 or 1)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Complex"
      security:
      - bearerAuth: []
  /Group/List:
    get:
      tags:
      - "Group"
      summary: "Get group IDs"
      description: ""
      operationId: "GetGroupList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "dateModified"
        in: "query"
        description: "Only return group IDs where a change was made after the given date (example: 20220101 -> yyyyMMdd)"
        required: true
        type: "string"
        format: "date"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /Group/Range:
    get:
      tags:
      - "Group"
      summary: "Get group data in range (restricted to 100 records/request)"
      description: ""
      operationId: "GetGroupListRange"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "range"
        in: "query"
        description: "range of IDs (example: 1,2,3,4,5)"
        required: true
        type: "string"
      - name: "adres"
        in: "query"
        description: "To request adres data or not (example: 0 or 1)"
        required: true
        type: "string"
      - name: "entityList"
        in: "query"
        description: "To request entityList data or not (example: 0 or 1)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Group"
      security:
      - bearerAuth: []
  /PandStatusCode/List:
    get:
      tags:
      - "PandStatus Code"
      summary: "Get all possible pand status IDs"
      description: ""
      operationId: "GetAttributeList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /PandStatusCode/Range:
    get:
      tags:
      - "Recht Code"
      summary: "Get Recht code data in range (unrestricted amount of data records/request)"
      description: ""
      operationId: "GetAttributeRange"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "range"
        in: "query"
        description: "range of IDs (example 1,2,3,4,5)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/RechtCode"
      security:
      - bearerAuth: []
  /RechtCode/List:
    get:
        tags:
        - "Recht Code"
        summary: "Get all possible Recht Code IDs"
        description: ""
        operationId: "GetAttributeList"
        consumes:
        - "application/json"
        produces:
        - "application/json"
        responses:
          "200":
            description: "successful operation"
            schema:
              type: "array"
              items:
                type: "integer"
                format: "int32"
        security:
        - bearerAuth: []
  /RechtCode/Range:
    get:
        tags:
        - "PandStatus Code"
        summary: "Get pand status code data in range (unrestricted amount of data records/request)"
        description: ""
        operationId: "GetAttributeRange"
        consumes:
        - "application/json"
        produces:
        - "application/json"
        parameters:
        - name: "range"
          in: "query"
          description: "range of IDs (example 1,2,3,4,5)"
          required: true
          type: "string"
        responses:
          "200":
            description: "successful operation"
            schema:
              $ref: "#/definitions/PandStatusCode"
        security:
        - bearerAuth: []
  /AttributeCode/List:
    get:
      tags:
      - "Attribute Code"
      summary: "Get all possible attribute code IDs"
      description: ""
      operationId: "GetAttributeCodeList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /AttributeCode/Range:
    get:
      tags:
      - "Attribute Code"
      summary: "Get attribute code data in range (unrestricted amount of data records/request)"
      description: ""
      operationId: "GetAttributeCodeRange"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "range"
        in: "query"
        description: "range of IDs (example 1,2,3,4,5)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AttributeCode"
      security:
      - bearerAuth: []
  /Kandidaat/GetPuntenscore:
    get:
      tags:
      - "Kandidaat Puntenscore Register"
      summary: "Get puntenscore"
      description: ""
      operationId: "GetPuntenscore"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "registerType"
        in: "query"
        description: "As default text use REGISTER_TYPE"
        required: true
        type: "string"
      - name: "registerTypeID"
        in: "query"
        description: "Choose RegisterType_ID (example: 1)"
        required: true
        type: "integer"
        format: "int32"
      - name: "nummerType"
        in: "query"
        description: "As default text use DEFINITIEF_NUMMER"
        required: true
        type: "string"
      - name: "nummer"
        in: "query"
        description: "Fill in the Definitive number you're looking for"
        required: true
        type: "string"
      - name: "insz"
        in: "query"
        description: "Fill in the INSZ-number, existing of 11 numbers (see identity card)"
        required: true
        type: "string"
      - name: "formatted"
        in: "query"
        description: "As default use true"
        required: true
        type: "boolean"
      - name: "extraPrioriteit"
        in: "query"
        description: "As default use true"
        required: true
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "integer"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /Kandidaat/GetAnoniemRegister:
    get:
      tags:
      - "Kandidaat Puntenscore Register"
      summary: "Get anoniem register"
      description: ""
      operationId: "GetAnoniemRegister"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "registerType"
        in: "query"
        description: "As default text use REGISTER_TYPE"
        required: true
        type: "string"
      - name: "registerTypeID"
        in: "query"
        description: "Choose RegisterType_ID (example: 1)"
        required: true
        type: "integer"
        format: "int32"
      - name: "nummerType"
        in: "query"
        description: "As default text use DEFINITIEF_NUMMER"
        required: true
        type: "string"
      - name: "nummer"
        in: "query"
        description: "Fill in the Definitive number you're looking for"
        required: true
        type: "string"
      - name: "insz"
        in: "query"
        description: "Fill in the INSZ-number, existing of 11 numbers (see identity card)"
        required: true
        type: "string"
      - name: "formatted"
        in: "query"
        description: "As default use true"
        required: true
        type: "boolean"
      - name: "extraPrioriteit"
        in: "query"
        description: "As default use true"
        required: true
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "integer"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /Kandidaat/GetActiefRegister:
    get:
      tags:
      - "Kandidaat Puntenscore Register"
      summary: "Get actief register"
      description: ""
      operationId: "GetActiefRegister"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "registerType"
        in: "query"
        description: "As default text use REGISTER_TYPE"
        required: true
        type: "string"
      - name: "registerTypeID"
        in: "query"
        description: "Choose RegisterType_ID (example: 1)"
        required: true
        type: "integer"
        format: "int32"
      - name: "nummerType"
        in: "query"
        description: "As default text use DEFINITIEF_NUMMER"
        required: true
        type: "string"
      - name: "nummer"
        in: "query"
        description: "Fill in the Definitive number you're looking for"
        required: true
        type: "string"
      - name: "insz"
        in: "query"
        description: "Fill in the INSZ-number, existing of 11 numbers (see identity card)"
        required: true
        type: "string"
      - name: "formatted"
        in: "query"
        description: "As default use true"
        required: true
        type: "boolean"
      - name: "extraPrioriteit"
        in: "query"
        description: "As default use true"
        required: true
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "integer"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /Inwoner/Get/INSZ:
    get:
      tags:
      - "Inwoner"
      summary: "Get Insz number from inwoner"
      description: ""
      operationId: "GetINSZ"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "insz"
        in: "query"
        description: "Fill in the INSZ-number, existing of 11 numbers (see identity card)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
               $ref: '#/definitions/Inwoner'
      security:
      - bearerAuth: []
  /Inwoner/AanmakenKandidaat:
    post:
      tags:
      - "Kandidaat Inschrijving"
      summary: "Create candidate for subscription"
      description: ""
      operationId: "AanmakenKandidaat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "KandidaatInschrijving"
        in: "body"
        description: "A candidate object to send with inwoners"
        required: true
        schema:
            type: "object"
            properties:
              Naam:
                type: "string"
              Straat:
                type: "string"
              HuisNr:
                type: "string"
              BusNr:
                type: "string"
              Gemeente:
                type: "string"
              EmailAdres:
                type: "string"
              TelefoonNr:
                type: "string"
              GSMNr:
                type: "string"
              INSZ:
                type: "string"
              BesteedbaarInkomen:
                type: "string"
              Inwoners:
                type: "array"
                items:
                   $ref: '#/definitions/InwonerInschrijving'
              Opmerking:
                type: "string"
      responses:
        "200":
          description: "successful operation"
      security:
      - bearerAuth: []
  /Inwoner/GetKandidaatAttesten:
    get:
      tags:
      - "Kandidaat Inschrijving"
      summary: "Get attesten"
      description: ""
      operationId: "GetKandidaatAttesten"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "RegisterType"
        in: "query"
        description: "Fill in the registertype (example: 1)"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items: 
              $ref: '#/definitions/AttestType'
      security:
      - bearerAuth: []
  /Inwoner/ToevoegenKandidaatAttest:
    post:
      tags:
      - "Kandidaat Inschrijving"
      summary: "Add attest"
      description: ""
      operationId: "ToevoegenKandidaatAttest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "KandidaatAttest"
        in: "body"
        description: "a candidate attest to send from a candidate with file/image"
        required: true
        schema:
            properties:
              sources:
                type: "array"
                items:
                   $ref: '#/definitions/KandidaatAttest'
      responses:
        "200":
          description: "successful operation"
      security:
      - bearerAuth: []  
  /Inwoner/GetWoningKeuzes:
    get:
      tags:
      - "Kandidaat Inschrijving"
      summary: "Get woningkeuzes"
      description: ""
      operationId: "GetWoningKeuzes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
               $ref: '#/definitions/WoningKeuze'
      security:
      - bearerAuth: []
  /Inwoner/SaveWoningKeuzes:
    post:
      tags:
      - "Kandidaat Inschrijving"
      summary: "Save woningkeuzes"
      description: ""
      operationId: "SaveWoningKeuzes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "woningKeuzes"
        in: "body"
        description: "List of woningkeuze objects (with id, description and sometimes value)"
        required: true
        schema:
            properties:
              sources:
                type: "array"
                items:
                   $ref: '#/definitions/WoningKeuze'
      responses:
        "200":
          description: "successful operation"
      security:
      - bearerAuth: []
  /Inwoner/GetContactRelatie:
    get:
      tags:
      - "Inwoner"
      summary: "Get reference candidate/tenant for inwoner"
      description: ""
      operationId: "GetContactRelatie"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "naam"
        in: "query"
        description: "Fill in the name"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "integer"
      security:
      - bearerAuth: []
  /Komplex/GetKeuzeGemeentes:
    get:
      tags:
      - "Kandidaat Inschrijving"
      summary: "Get keuzegemeentes"
      description: ""
      operationId: "GetKeuzeGemeentes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
               $ref: '#/definitions/Gemeente'
      security:
      - bearerAuth: []
  /Komplex/GetKandidaatKomplexKeuzes:
    get:
      tags:
      - "Kandidaat Inschrijving"
      summary: "Get kandidaat komplexkeuzes"
      description: ""
      operationId: "GetKandidaatKomplexKeuzes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "aantalInwoners"
        in: "query"
        description: "Fill in amount of inwoners"
        required: true
        type: "integer"
      - name: "RegisterType"
        in: "query"
        description: "Fill in the registertype"
        required: true
        type: "integer"
      - name: "gemeentes"
        in: "query"
        description: "Fill in preferred gemeentes separated by comma, (Default: '')"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
               $ref: '#/definitions/Komplex'
      security:
      - bearerAuth: []
  /Komplex/SaveKandidaatKomplexKeuzes:
    post:
      tags:
      - "Kandidaat Inschrijving"
      summary: "Save kandidaat komplexkeuzes"
      description: ""
      operationId: "SaveKandidaatKomplexKeuzes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "komplexKeuzes"
        in: "body"
        description: "List of komplexkeuze objects (with id, slaapkamers, etc...)"
        required: true
        schema:
            properties:
              sources:
                type: "array"
                items:
                  $ref: '#/definitions/KomplexKeuze'
      responses:
        "200":
          description: "successful operation"
      security:
      - bearerAuth: []
  /Panden/Aantal:
    get:
      tags:
      - "Kandidaat Inschrijving"
      summary: "Get patrimonium aantal based on given data"
      description: ""
      operationId: "Aantal"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "data"
        in: "query"
        description: "data containing komplexID, slaapkamers en pandType (example: '2-2-APPARTEMENT')"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "integer"
      security:
      - bearerAuth: []
  /GeoMap/GetKomplexen:
    get:
      tags:
      - "Patrimonium GeoMap"
      summary: "Get Komplexen"
      description: ""
      operationId: "GetKomplexen"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
               $ref: '#/definitions/GeoMap'
      security:
      - bearerAuth: []
  /GeoMap/GetPatrimoniumGroepen:
    get:
      tags:
      - "Patrimonium GeoMap"
      summary: "Get Patrimoniumgroepen"
      description: ""
      operationId: "GetPatrimoniumGroepen"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
               $ref: '#/definitions/GeoMap'
      security:
      - bearerAuth: []
  /GeoMap/GetPandenInfo:
    get:
      tags:
      - "Patrimonium PandenInfo"
      summary: "Get Patrimonium komplex panden informatie"
      description: ""
      operationId: "GetPandenInfo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "komplex_ID"
        in: "query"
        description: "Fill in the desired komplex (example: 1)"
        required: true
        type: "integer"
      - name: "websiteMap"
        in: "query"
        description: "Fill in the baseUrl, use '|' for drive - and map-separation (example: C|Git|Gashnetplus|App)"
        required: true
        type: "string" 
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
               $ref: '#/definitions/KomplexPandenInfoRecord'
      security:
      - bearerAuth: [] 
  /BedrijfWebLogging/PostLogging:
    post:
      tags:
      - "BedrijfWebsite Melding Registratie"
      summary: "Registreer een nieuwe melding via de website"
      description: ""
      operationId: "PostMeldingLogging"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "BedrijfWebLogging"
        in: "body"
        description: "An object that has basic information like name, email, address, etc... with possible image/file attached"
        required: true
        schema:
            type: "object"
            properties:
              Soort:
                type: "string"
              Omschrijving:
                type: "string"
              Naam:
                type: "string"
              TelGsmNr:
                type: "string"
              Email:
                type: "string"
              Adres:
                type: "string"
              Woonplaats:
                type: "string"
              Bestanden:
                type: "array"
                items:
                   $ref: '#/definitions/Bestand'
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "boolean"
      security:
      - bearerAuth: []
securityDefinitions:
  bearerAuth:
    type: "apiKey"
    name: "bearer"
    in: "header"
definitions:
  Entity:
    type: "object"
    properties:
      entityID:
        type: "integer"
        format: "int32"
      number:
        type: "string"
      countrycode:
        type: "string"
      postalcode:
        type: "string"
      county:
        type: "string"
      street:
        type: "string"
      housenumber:
        type: "string"
      boxnumber:
        type: "string"
      complexcode:
        type: "string"
      structure:
        type: "string"
      lease:
        type: "string"
      status:
        type: "string"
      attributeList:
        type: "array"
        items:
          properties:
            attributeID:
              type: "integer"
              format: "int32"
            attributeCodeID:
              type: "integer"
              format: "int32"
            datefrom:
              type: "string"
              format: "datetime"
            dateuntil:
              type: "string"
              format: "datetime"
            value:
              type: "string"
      rightList:
        type: "array"
        items:
          properties:
            description:
              type: "string"
            dateFrom:
              type: "string"
              format: "datetime"
            dateUntil:
              type: "string"
              format: "datetime"
            rechtCodeID:
              type: "integer"
              format: "int32"
            ratioNumerator:
              type: "integer"
              format: "int32"
            ratioDenominator: 
              type: "integer"
              format: "int32"
            ratio:
              type: "number"
              format: "float"
            type: 
              type: "string"
      company:
        type: "array"
        items:
          properties:
            dateFrom:
              type: "string"
              format: "datetime"
            dateUntil:
              type: "string"
              format: "datetime"
            pandStateCodeID:
              type: "integer"
              format: "int32"
            type:
              type: "string"
            rightList:
              type: "array"
              items:
                properties:
                  description:
                    type: "string"
                  dateFrom:
                    type: "string"
                    format: "datetime"
                  dateUntil:
                    type: "string"
                    format: "datetime"
                  rechtCodeID:
                    type: "integer"
                    format: "int32"
                  ratioNumerator:
                    type: "integer"
                    format: "int32"
                  ratioDenominator: 
                    type: "integer"
                    format: "int32"
                  ratio:
                    type: "number"
                    format: "float"
                  type: 
                    type: "string"
      tenants:
        type: "array"
        items:
          properties:
            dateFrom:
              type: "string"
              format: "datetime"
            dateUntil:
              type: "string"
              format: "datetime"
            pandStateCodeID:
              type: "integer"
              format: "int32"
            type:
              type: "string"
            rightList:
              type: "array"
              items:
                properties:
                  description:
                    type: "string"
                  dateFrom:
                    type: "string"
                    format: "datetime"
                  dateUntil:
                    type: "string"
                    format: "datetime"
                  rechtCodeID:
                    type: "integer"
                    format: "int32"
                  ratioNumerator:
                    type: "integer"
                    format: "int32"
                  ratioDenominator: 
                    type: "integer"
                    format: "int32"
                  ratio:
                    type: "number"
                    format: "float"
                  type: 
                    type: "string"
      owners:
        type: "array"
        items: 
          properties:
            name:
              type: "string"
            companyNumber:
              type: "string"
            dateFrom:
              type: "string"
              format: "datetime"
            dateUntil:
              type: "string"
              format: "datetime"
            pandStateCodeID:
              type: "integer"
              format: "int32"
            type:
              type: "string"
            rightList:
              type: "array"
              items:
                properties:
                  description:
                    type: "string"
                  dateFrom:
                    type: "string"
                    format: "datetime"
                  dateUntil:
                    type: "string"
                    format: "datetime"
                  rechtCodeID:
                    type: "integer"
                    format: "int32"
                  ratioNumerator:
                    type: "integer"
                    format: "int32"
                  ratioDenominator: 
                    type: "integer"
                    format: "int32"
                  ratio:
                    type: "number"
                    format: "float"
                  type: 
                    type: "string"
  Complex:
    type: "object"
    items: 
      properties:
        complexID:
          type: "integer"
          format: "int32"
        code:
          type: "string"
        description:
          type: "string"
        countrycode:
          type: "string"
        postalcode:
          type: "string"
        county:
          type: "string"
        street:
          type: "string"
        housenumber:
          type: "string"
        boxnumber:
          type: "string"
        entityIDList:
          type: "array"
          items:
            type: "integer"
            format: "int32"
  Group:
    type: "object"
    properties:
      groupID:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      description:
        type: "string"
      countrycode:
        type: "string"
      postalcode:
        type: "string"
      county:
        type: "string"
      street:
        type: "string"
      housenumber:
        type: "string"
      boxnumber:
        type: "string"
      entityIDList:
        type: "array"
        items:
          type: "integer"
          format: "int32"
  PandStatusCode:
    type: "object"
    properties:
      pandStatusCodeID:
        type: "integer"
        format: "int32"
      code:
        type: "string"
      description:
        type: "string"
  AttributeCode:
    type: "object"
    properties:
      attributeCodeID:
        type: "integer"
        format: "int32"
      code:
        type: "string"
      description:
        type: "string"
  Attribute:
    type: "object"
    properties:
      attributeID:
        type: "integer"
        format: "int32"
      attributeCodeID:
        type: "integer"
        format: "int32"
      datefrom:
        type: "string"
        format: "datetime"
      dateuntil:
        type: "string"
        format: "datetime"
      value:
        type: "string"
  Puntenscore_Anoniem_En_Actief_Register:
    type: "object"
    properties:
      registerType:
        type: "string"
      registerTypeID:
        type: "string"
      nummerType:
        type: "string"
      nummer:
        type: "string"
      insz:
        type: "string"
      formatted:
        type: "string"
      extraPrioriteit:
        type: "boolean"
  KandidaatInschrijving:
    type: "object"
    properties:
      Naam:
        type: "string"
      Straat:
        type: "string"
      HuisNr:
        type: "string"
      BusNr:
        type: "string"
      Gemeente:
        type: "string"
      EmailAdres:
        type: "string"
      TelefoonNr:
        type: "string"
      GSMNr:
        type: "string"
      INSZ:
        type: "string"
      BesteedbaarInkomen:
        type: "string"
      Inwoners:
        type: "array"
        items:
           $ref: '#/definitions/InwonerInschrijving'
      Opmerking:
        type: "string"
  InwonerInschrijving:
    type: "object"
    properties:
      Naam:
        type: "string"
      INSZ:
        type: "string"
      BesteedbaarInkomen:
        type: "string"
  Inwoner:
    type: "object"
    properties:
      Naam:
        type: "string"
      INSZ_Nummer:
        type: "string"
      Geslacht:
        type: "string"
      GeboorteDatum:
        type: "string"
      RelatieType:
        type: "string"
  KandidaatAttest:
    type: "object"
    properties:
      Attest_Type_ID:
        type: "integer"
      Contact_Relatie_ID:
        type: "integer"
      BestandNaam:
        type: "string"
      Bestand:
        type: "string"
      OK: 
        type: "boolean"
  AttestType:
    type: "object"
    properties:
      ID:
        type: "integer"
      Omschrijving:
        type: "string"
  ContactRelatieWoningKeuze:
    type: "object"
    properties:
      Woning_Keuze_ID:
        type: "integer"
      Contact_Relatie_ID:
        type: "integer"
      Waarde:
        type: "string"
  WoningKeuze:
    type: "object"
    properties:
      ID:
        type: "integer"
      Omschrijving:
        type: "string"
      WaardeInGebruik:
        type: "boolean"
  Gemeente:
    type: "object"
    properties:
      Gemeente_ID:
        type: "integer"
      Code:
        type: "string"
      Omschrijving:
        type: "string"
  Komplex:
    type: "object"
    properties:
      Komplex_ID:
        type: "integer"
      Kode:
        type: "string"
      Omschrijving:
        type: "string"
      Type_ID:
        type: "integer"
      Type:
        type: "string"
      Slaapkamers:
        type: "integer"
      AantalVerhuurbarePanden:
        type: "integer"
  KomplexKeuze:
    type: "object"
    properties:
      Komplex_ID:
        type: "integer"
      Pand_Type_ID:
        type: "integer"
      Slaapkamers:
        type: "integer"
      Contact_Relatie_ID:
        type: "integer" 
  GeoMap:
    type: "object"
    properties:
      ID:
        type: "integer"
      Code:
        type: "string"
      Omschrijving:
        type: "string"
      KeuzeGebied:
        type: "string"
      Panden:
        type: "array"
        items:
           $ref: '#/definitions/PandGeoMap'
      Straat:
        type: "string"
      HuisNr:
        type: "string"
      BusNr:
        type: "string"
      PostCode:
        type: "string" 
      Gemeente:
        type: "string"
      Kleur:
        type: "string"
      Latitude:
        type: "number"
        format: "double"
      Longitude:
        type: "number"
        format: "double"
  PandGeoMap:
    type: "object"
    properties:
      ID:
        type: "integer"
      NrIntern:
        type: "string"
      Straat:
        type: "string"
      HuisNr:
        type: "string"
      BusNr:
        type: "string"
      PostCode:
        type: "string" 
      Gemeente:
        type: "string"
      PandType:
        type: "string"
      Verdieping:
        type: "string"
      Slaapkamers:
        type: "integer"
      LiftAanwezig:
        type: "boolean"
      DoelgroepOuderenVrbeh:
        type: "boolean"
      DoelgroepAangepastRolstoelVrbeh:
        type: "boolean"
      Latitude:
        type: "number"
        format: "double"
      Longitude:
        type: "number"
        format: "double"
  KomplexPandenInfoRecord:
      type: "object"
      properties:
        Komplex_ID:
          type: "integer"
        Komplex:
          type: "string"
        Pand_ID:
          type: "integer"
        PandNr:
          type: "string"
        PandAdres:
          type: "string"
        Kenmerken:
          type: "array"
          items:
           type: "object"
        PandType:
          type: "string"
        AantalSlaapKamers:
          type: "string"
        VerhuringsStelsel:
          type: "string"
        PandFotos:
          type: "array"  
          items:
           type: "string"
           format: "byte"
  Bestand:
      type: "object"
      properties:
        BestandNaam:
          type: "string"
        Bestand:
          type: "string"
