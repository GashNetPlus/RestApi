swagger: "2.0"
info:
  title: "Swagger GashNetPlus"
  version: "1.0.0"
  description: "This is the GashNetPlus REST API. The basepath URL is unique for each customer and access is restricted with a Token authorisation. Every succesfull request will return data in JSON format."
  contact:
    email: "helpdesk@gashnetplus.be"
basePath: "/v2"
schemes:
- "https"
paths:
  /Entity/List/:
    get:
      tags:
      - "Entity"
      summary: "Get all possible entity IDs"
      description: ""
      operationId: "GetEntityList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /Entity/Range/{range}/{adres}/{state}/{attributes}:
    get:
      tags:
      - "Entity"
      summary: "Get entity data in range (restricted to 10 records/request)"
      description: ""
      operationId: "GetEntityRange"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "range"
        in: "path"
        description: "range of IDs (example: 1,2,3,4,5)"
        required: true
        type: "string"
      - name: "adres"
        in: "path"
        description: "To request adres data or not (example: 0 or 1)"
        required: true
        type: "string"
      - name: "state"
        in: "path"
        description: "To request state data or not (example: 0 or 1)"
        required: true
        type: "string"
      - name: "attributes"
        in: "path"
        description: "To request attribute data or not (example: 0 or 1)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Entity"
      security:
      - bearerAuth: []
  /Entity/Modified/{date}:
    get:
      tags:
      - "Entity"
      summary: "Get entity data if a change was made after the given date"
      description: ""
      operationId: "GetEntityModified"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "date"
        in: "path"
        description: "Date (example: 20220101 -> yyyyMMdd)"
        required: true
        type: "string"
        format: "date"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Entity"
      security:
      - bearerAuth: []
  /Complex/List/:
    get:
      tags:
      - "Complex"
      summary: "Get all possible complex IDs"
      description: ""
      operationId: "GetComplexList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /Complex/Range/{range}/{adres}/{entityList}:
    get:
      tags:
      - "Complex"
      summary: "Get complex data in range (restricted to 10 records/request)"
      description: ""
      operationId: "GetComplexRange"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "range"
        in: "path"
        description: "range of IDs (example: 1,2,3,4,5)"
        required: true
        type: "string"
      - name: "adres"
        in: "path"
        description: "To request adres data or not (example: 0 or 1)"
        required: true
        type: "string"
      - name: "entityList"
        in: "path"
        description: "To request entityList data or not (example: 0 or 1)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Complex"
      security:
      - bearerAuth: []
  /Complex/Modified/{date}:
    get:
      tags:
      - "Complex"
      summary: "Get complex data if a change was made after the given date"
      description: ""
      operationId: "GetComplexModified"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "date"
        in: "path"
        description: "Date (example: 20220101 -> yyyyMMdd)"
        required: true
        type: "string"
        format: "date"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Complex"
      security:
      - bearerAuth: []
  /Group/List/:
    get:
      tags:
      - "Group"
      summary: "Get all possible group IDs"
      description: ""
      operationId: "GetGroupList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /Group/Range/{range}/{adres}/{entityList}:
    get:
      tags:
      - "Group"
      summary: "Get group data in range (restricted to 10 records/request)"
      description: ""
      operationId: "GetGroupListRange"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "range"
        in: "path"
        description: "range of IDs (example: 1,2,3,4,5)"
        required: true
        type: "string"
      - name: "adres"
        in: "path"
        description: "To request adres data or not (example: 0 or 1)"
        required: true
        type: "string"
      - name: "entityList"
        in: "path"
        description: "To request entityList data or not (example: 0 or 1)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Group"
      security:
      - bearerAuth: []
  /Group/Modified/{date}:
    get:
      tags:
      - "Group"
      summary: "Get group data if a change was made after the given date"
      description: ""
      operationId: "GetGroupModified"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "date"
        in: "path"
        description: "Date (example: 20220101 -> yyyyMMdd)"
        required: true
        type: "string"
        format: "date"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Group"
      security:
      - bearerAuth: []
  /AttributeCode/List/:
    get:
      tags:
      - "Attribute"
      summary: "Get all possible attribute IDs"
      description: ""
      operationId: "GetAttributeList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int32"
      security:
      - bearerAuth: []
  /AttributeCode/Range/{range}:
    get:
      tags:
      - "Attribute"
      summary: "Get attribute data in range (unrestricted amount of data records/request)"
      description: ""
      operationId: "GetAttributeRange"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "range"
        in: "path"
        description: "range of IDs (example 1,2,3,4,5)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AttributeCode"
      security:
      - bearerAuth: []
securityDefinitions:
  bearerAuth:
    type: "apiKey"
    name: "bearer"
    in: "header"
definitions:
  Entity:
    type: "object"
    properties:
      entityID:
        type: "integer"
        format: "int32"
      number:
        type: "string"
      countrycode:
        type: "string"
      postalcode:
        type: "string"
      county:
        type: "string"
      street:
        type: "string"
      housenumber:
        type: "string"
      boxnumber:
        type: "string"
      complexcode:
        type: "string"
      structure:
        type: "string"
      lease:
        type: "string"
      status:
        type: "string"
      attributeList:
        type: "array"
        items:
          properties:
            attributeID:
              type: "integer"
              format: "int32"
            attributeCodeID:
              type: "integer"
              format: "int32"
            datefrom:
              type: "string"
              format: "datetime"
            dateuntil:
              type: "string"
              format: "datetime"
            value:
              type: "string"
  Complex:
    type: "object"
    properties:
      complexID:
        type: "integer"
        format: "int32"
      code:
        type: "string"
      description:
        type: "string"
      countrycode:
        type: "string"
      postalcode:
        type: "string"
      county:
        type: "string"
      street:
        type: "string"
      housenumber:
        type: "string"
      boxnumber:
        type: "string"
      entityIDList:
        type: "array"
        items:
          type: "integer"
          format: "int32"
  Group:
    type: "object"
    properties:
      groupID:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      description:
        type: "string"
      countrycode:
        type: "string"
      postalcode:
        type: "string"
      county:
        type: "string"
      street:
        type: "string"
      housenumber:
        type: "string"
      boxnumber:
        type: "string"
      entityIDList:
        type: "array"
        items:
          type: "integer"
          format: "int32"
  AttributeCode:
    type: "object"
    properties:
      attributeCodeID:
        type: "integer"
        format: "int32"
      code:
        type: "string"
      description:
        type: "string"
  Attribute:
    type: "object"
    properties:
      attributeID:
        type: "integer"
        format: "int32"
      attributeCodeID:
        type: "integer"
        format: "int32"
      datefrom:
        type: "string"
        format: "datetime"
      dateuntil:
        type: "string"
        format: "datetime"
      value:
        type: "string"
